jobs:
  - name: J1
    type: runSh
    steps:
      - TASK:
        - script: cat /build/OUT/my_state/version.json
        - script: echo versionName=j1 > $JOB_STATE/my_state.env
        - script: echo foo=j1 >> $JOB_STATE/my_state.env
      - OUT: my_state
        #overwrite: true

  - name: J2
    type: runSh
    steps:
      - TASK:
        - script: cat /build/OUT/my_state/version.json
        - script: echo versionName=j2 > $JOB_STATE/my_state.env
        - script: echo bar=j2 >> $JOB_STATE/my_state.env
      - OUT: my_state
        overwrite: true
        
  - name: J3
    type: runSh
    steps:
      - TASK:
        - script: echo foo=j3 > $JOB_STATE/my_params.env
        - script: echo versionName="j3-$(date)" >> $JOB_STATE/my_params.env
        - script: echo "my_params job state"
        - script: cat $JOB_STATE/my_params.env
      - OUT: my_params
        overwrite: true
  
  - name: J4
    type: runSh
    steps:
      - IN: my_params
      - TASK:
        - script: cat /build/IN/my_params/version.json

  - name: J5
    type: runSh
    steps:
      - IN: test_exit_repo
      - TASK:
        - script: echo "Do something with the repo..."
      - OUT: test_exit_ciRepo
      
  - name: J6
    type: runSh
    steps:
      - IN: my_state
      - TASK:
        - script: cat /build/IN/my_state/version.json
